<project name="YouTubeCenter" default="all" basedir=".">
  <description>
    Compiling script to different browsers.
  </description>
  
  <property name="build.prop" value="${basedir}/build.properties" />
  <property name="language.db" value="${basedir}/language.json" />
  <property name="language.jar" value="${basedir}/LanguageDatabaseUpdater.jar" />
  <property name="language.key" value="0AhHfBBHelFnAdF9fWHlVaHlGdUYteFNUUFVpeTIta2c" />
  <property name="encoding" value="UTF-8" />
  
  <property name="name" value="YouTubeCenter" />
  
  <property name="build" value="${basedir}/build" />
  <property name="src" value="${basedir}/src" />
  <property name="dist" value="${basedir}/dist" />
  <property name="cert" value="${basedir}/.cert" />
  
  <property name="buildDir" value="${build}/${name}" />
  
  <property name="cert.chromePath" value="${cert}/chrome" />
  <property name="cert.chrome" value="${cert.chromePath}/${name}.pem" />
  
  <property name="src.chrome" value="${src}/.chrome" />
  <property name="src.maxthon" value="${src}/.maxthon" />
  <property name="src.firefox-legacy" value="${src}/.firefox-legacy" />
  <property name="src.safari" value="${src}/.safari" />
  <property name="src.opera" value="${src}/.opera" />
  <property name="src.firefox" value="${src}/.firefox" />
  
  <property name="name.styles" value=".styles" />
  <property name="src.styles" value="${src}/${name.styles}" />
  
  <property name="sdk.maxthon" value="${basedir}/SDK/maxthon.exe" />
  <property name="sdk.yuicompressor" value="${basedir}/SDK/yuicompressor-2.4.7.jar" />
  <property name="sdk.buildcrx" value="${basedir}/SDK/buildcrx.exe" />
  
  <property name="indentifier.userscript" value="0" />
  <property name="indentifier.chrome" value="1" />
  <property name="indentifier.maxthon" value="2" />
  <property name="indentifier.firefox-legacy" value="3" />
  <property name="indentifier.safari" value="4" />
  <property name="indentifier.opera" value="5" />
  <property name="indentifier.firefox" value="6" />
  
  <property name="styles.general" value="ytcenter-styles-general.css" />
  <property name="styles.normal" value="ytcenter-styles-normal.css" />
  <property name="styles.topbar" value="ytcenter-styles-topbar.css" />
  <property name="styles.flags" value="ytcenter-styles-flags.css" />
  <property name="styles.html5player" value="ytcenter-styles-html5player.css" />
  <property name="styles.grid-subscriptions" value="ytcenter-styles-grid-subscriptions.css" />
  <property name="styles.images" value="ytcenter-styles-images.css" />
  <property name="styles.dialog" value="ytcenter-styles-dialog.css" />
  
  <target name="all" depends="preinit, userscript, chrome, maxthon, firefox, firefox-legacy, safari, opera, clean" />
  <target name="preinit">
    <mkdir dir="${cert}" />
    <mkdir dir="${dist}" />
    <mkdir dir="${build}" />
    <mkdir dir="${buildDir}" />
    <mkdir dir="${src}" />
    <mkdir dir="${src.chrome}" />
    <mkdir dir="${src.firefox}" />
    <mkdir dir="${src.firefox-legacy}" />
    <mkdir dir="${src.maxthon}" />
    <mkdir dir="${cert.chromePath}" />
  </target>
  <target name="language">
    <exec executable="java">
      <arg value="-Dfile.encoding=UTF-8" />
      <arg value="-jar" />
      <arg value="${language.jar}" />
      <arg value="${language.key}" />
      <arg value="${language.db}" />
    </exec>
  </target>
  
  <target name="styles">
    <copy todir="${build}/${name.styles}">
      <fileset dir="${src.styles}/" />
    </copy>
    <java jar="${sdk.yuicompressor}" fork="true">
      <arg value="${src.styles}/${styles.general}" />
      <arg value="-o" />
      <arg value="${build}/${name.styles}/${styles.general}" />
    </java>
    <java jar="${sdk.yuicompressor}" fork="true">
      <arg value="${src.styles}/${styles.normal}" />
      <arg value="-o" />
      <arg value="${build}/${name.styles}/${styles.normal}" />
    </java>
    <java jar="${sdk.yuicompressor}" fork="true">
      <arg value="${src.styles}/${styles.topbar}" />
      <arg value="-o" />
      <arg value="${build}/${name.styles}/${styles.topbar}" />
    </java>
    <java jar="${sdk.yuicompressor}" fork="true">
      <arg value="${src.styles}/${styles.flags}" />
      <arg value="-o" />
      <arg value="${build}/${name.styles}/${styles.flags}" />
    </java>
    <java jar="${sdk.yuicompressor}" fork="true">
      <arg value="${src.styles}/${styles.html5player}" />
      <arg value="-o" />
      <arg value="${build}/${name.styles}/${styles.html5player}" />
    </java>
    <java jar="${sdk.yuicompressor}" fork="true">
      <arg value="${src.styles}/${styles.grid-subscriptions}" />
      <arg value="-o" />
      <arg value="${build}/${name.styles}/${styles.grid-subscriptions}" />
    </java>
    <java jar="${sdk.yuicompressor}" fork="true">
      <arg value="${src.styles}/${styles.images}" />
      <arg value="-o" />
      <arg value="${build}/${name.styles}/${styles.images}" />
    </java>
    <java jar="${sdk.yuicompressor}" fork="true">
      <arg value="${src.styles}/${styles.dialog}" />
      <arg value="-o" />
      <arg value="${build}/${name.styles}/${styles.dialog}" />
    </java>
  </target>
  <target name="apply-styles">
    <loadfile property="style.minified.general" srcFile="${build}/${name.styles}/${styles.general}" />
    <loadfile property="style.minified.normal" srcFile="${build}/${name.styles}/${styles.normal}" />
    <loadfile property="style.minified.topbar" srcFile="${build}/${name.styles}/${styles.topbar}" />
    <loadfile property="style.minified.flags" srcFile="${build}/${name.styles}/${styles.flags}" />
    <loadfile property="style.minified.html5player" srcFile="${build}/${name.styles}/${styles.html5player}" />
    <loadfile property="style.minified.grid-subscriptions" srcFile="${build}/${name.styles}/${styles.grid-subscriptions}" />
    <loadfile property="style.minified.images" srcFile="${build}/${name.styles}/${styles.images}" />
    <loadfile property="style.minified.dialog" srcFile="${build}/${name.styles}/${styles.dialog}" />
    <replace dir="${buildDir}" value="${style.minified.general}" token="@styles-general@" encoding="${encoding}" />
    <replace dir="${buildDir}" value="${style.minified.normal}" token="@styles-normal@" encoding="${encoding}" />
    <replace dir="${buildDir}" value="${style.minified.topbar}" token="@styles-topbar@" encoding="${encoding}" />
    <replace dir="${buildDir}" value="${style.minified.flags}" token="@styles-flags@" encoding="${encoding}" />
    <replace dir="${buildDir}" value="${style.minified.html5player}" token="@styles-html5player@" encoding="${encoding}" />
    <replace dir="${buildDir}" value="${style.minified.grid-subscriptions}" token="@styles-grid-subscriptions@" encoding="${encoding}" />
    <replace dir="${buildDir}" value="${style.minified.images}" token="@styles-images@" encoding="${encoding}" />
    <replace dir="${buildDir}" value="${style.minified.dialog}" token="@styles-dialog@" encoding="${encoding}" />
  </target>
  <target name="clean-styles">
    <delete dir="${build}/${name.styles}" />
  </target>
  
  <target name="userscript" depends="preinit, copy-userscript">
    <move todir="${dist}">
      <fileset dir="${buildDir}">
        <include name="*.js" />
      </fileset>
    </move>
    <antcall target="clean" />
  </target>
  
  <target name="dev" depends="preinit, copy-chrome">
    <copy todir="${dist}/chrome-dev">
      <fileset dir="${buildDir}" />
    </copy>
    <antcall target="clean" />
  </target>
  
  <target name="chrome" depends="preinit, copy-chrome, chrome-zip, chrome-crx, clean" />
  <target name="chrome-zip" depends="preinit, copy-chrome">
    <zip destfile="${buildDir}/chrome.zip" basedir="${buildDir}" />
  </target>
  <target name="chrome-crx" depends="chrome-keycheck, build-chrome-key">
    <exec executable="${sdk.buildcrx}">
      <arg value="-crx" />
      <arg value="${buildDir}/chrome.zip" />
      <arg value="${cert.chrome}" />
      <arg value="${dist}/${name}.crx" />
    </exec>
    <!--<delete file="${build}/chrome.zip" />-->
  </target>
  
  <target name="chrome-keycheck">
    <condition property="cert.chrome.found">
      <available file="${cert.chrome}" type="file" />
    </condition>
  </target>
  
  <target name="build-chrome-key" unless="cert.chrome.found">
    <exec executable="${sdk.buildcrx}">
      <arg value="-prv" />
      <arg value="${cert.chrome}" />
    </exec>
  </target>
  
  <target name="maxthon" depends="preinit, copy-maxthon">
    <exec executable="${sdk.maxthon}">
      <arg value="${buildDir}" />
      <arg value="${dist}/${name}.mxaddon" />
    </exec>
    <antcall target="clean" />
  </target>
  
  <target name="firefox" depends="preinit, copy-firefox">
		<zip destfile="${dist}/${name}.xpi" basedir="${buildDir}" />
    <antcall target="clean" />
	</target>
  
  <target name="firefox-legacy" depends="preinit, copy-firefox-legacy">
    <exec executable="cmd">
      <arg value="/c"/>
      <arg value="build-firefox-legacy.bat"/>
    </exec>
	</target>
  
  <target name="safari" depends="preinit, copy-safari">
    <mkdir dir="${dist}/${name}.safariextension" />
		<move todir="${dist}/${name}.safariextension">
      <fileset dir="${buildDir}/" />
    </move>
    <antcall target="clean" />
	</target>
  
  <target name="opera" depends="preinit, copy-opera">
		<zip destfile="${dist}/${name}.oex" basedir="${buildDir}" />
    <antcall target="clean" />
	</target>
  
  <target name="copy">
    <copy todir="${buildDir}">
      <fileset dir="${src}">
        <include name="*.*" />
        <exclude name=".*" />
      </fileset>
    </copy>
  </target>
  
  <target name="copy-userscript">
    <antcall target="copy" />
    <antcall target="tokenreplace" />
    <antcall target="apply-styles" />
    <replace dir="${buildDir}" value="${indentifier.userscript}" token="@identifier@" encoding="${encoding}" />
  </target>
  
  <target name="copy-chrome">
    <copy todir="${buildDir}">
      <fileset dir="${src.chrome}/" />
    </copy>
    <copy todir="${buildDir}">
      <fileset dir="${src}">
        <include name="*.*" />
        <exclude name=".*" />
      </fileset>
      <mapper>
        <globmapper from="*.user.js" to="*.js" /> 
      </mapper>
    </copy>
    <antcall target="tokenreplace" />
    <antcall target="apply-styles" />
    <replace dir="${buildDir}" value="${indentifier.chrome}" token="@identifier@" encoding="${encoding}" />
  </target>
  
  <target name="copy-maxthon">
    <copy todir="${buildDir}">
      <fileset dir="${src.maxthon}/" />
    </copy>
    <antcall target="copy" />
    <antcall target="tokenreplace" />
    <antcall target="apply-styles" />
    <replace dir="${buildDir}" value="${indentifier.maxthon}" token="@identifier@" encoding="${encoding}" />
  </target>
  
  <target name="copy-firefox">
    <antcall target="copy" />
    <move todir="${buildDir}/data">
      <fileset dir="${buildDir}" />
    </move>
    <copy todir="${buildDir}">
      <fileset dir="${src.firefox}/" />
    </copy>
    <antcall target="tokenreplace" />
    <antcall target="apply-styles" />
    <replace dir="${buildDir}" value="${indentifier.firefox}" token="@identifier@" encoding="${encoding}" />
  </target>
  
  <target name="copy-firefox-legacy">
    <antcall target="copy" />
    <move todir="${buildDir}/data">
      <fileset dir="${buildDir}" />
    </move>
    <copy todir="${buildDir}">
      <fileset dir="${src.firefox-legacy}/" />
    </copy>
    <antcall target="tokenreplace" />
    <antcall target="apply-styles" />
    <replace dir="${buildDir}" value="${indentifier.firefox-legacy}" token="@identifier@" encoding="${encoding}" />
  </target>
  
  <target name="copy-safari">
    <copy todir="${buildDir}">
      <fileset dir="${src.safari}/" />
    </copy>
    <antcall target="copy" />
    <antcall target="tokenreplace" />
    <antcall target="apply-styles" />
    <replace dir="${buildDir}" value="${indentifier.safari}" token="@identifier@" encoding="${encoding}" />
  </target>
  
  <target name="copy-opera">
    <copy todir="${buildDir}/includes">
      <fileset dir="${src}">
        <include name="*.*" />
        <exclude name=".*" />
      </fileset>
      <mapper>
        <globmapper from="*.user.js" to="*.js" /> 
      </mapper>
    </copy>
    <copy todir="${buildDir}">
      <fileset dir="${src.opera}/" />
    </copy>
    <antcall target="tokenreplace" />
    <antcall target="apply-styles" />
    <replace dir="${buildDir}" value="${indentifier.opera}" token="@identifier@" encoding="${encoding}" />
  </target>
  
  <target name="tokenreplace">
    <loadfile property="language.db.content" srcfile="${language.db}" encoding="${encoding}" />
    <replace dir="${buildDir}" value="${language.db.content}" token="@ant-database-language@" encoding="${encoding}" />
    <replace dir="${buildDir}" replacefilterfile="${build.prop}" encoding="${encoding}" />
  </target>
  
  <target name="clean">
    <delete dir="${buildDir}" />
  </target>
  <target name="clean-all" depends="clean, clean-styles" />
</project>